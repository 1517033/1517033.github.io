<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[leetcode] Maximum Subarray</title>
      <link href="/2022/03/10/Divide%20and%20Conquer/leetcode53/"/>
      <url>/2022/03/10/Divide%20and%20Conquer/leetcode53/</url>
      
        <content type="html"><![CDATA[<h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><p><img src="https://cdn.jsdelivr.net/gh/1517033/picgodemo/img/2022-03-10%2017-48-34%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="题目"></p><p><strong>Example 1:</strong></p><p><code>Input: nums = [-2,1,-3,4,-1,2,1,-5,4]</code><br/><br><code>Output: 6</code><br/><br><code>Explanation: [4,-1,2,1] has the largest sum = 6.</code></p><p><strong>Example 2:</strong></p><p><code>Input: nums = [1]</code><br/><br><code>Output: 1</code></p><p><strong>Example 3:</strong></p><p><code>Input: nums = [5,4,-1,7,8]</code><br/><br><code>Output: 23</code></p><p><strong>Constraints:</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><p><code>-104 &lt;= nums[i] &lt;= 104</code></p><p><strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution using the <strong>divide and conquer</strong> approach, which is more subtle.</p></li></ul><h1 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h1><h2 id="Solution-one-分治法-Divide-and-Conquer"><a href="#Solution-one-分治法-Divide-and-Conquer" class="headerlink" title="Solution one (分治法 Divide and Conquer)"></a>Solution one (分治法 Divide and Conquer)</h2><p><strong>时间复杂度：O(nlogn)</strong>    </p><p>这个分治法的思想类似与二分搜索法，假设最大子序列存在，则仅有三种情况：</p><ul><li>在中点左侧[begin:mid]</li><li>在中点右侧[mid+1:end]</li><li>跨越了中点</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">![<span class="number">2022</span><span class="number">-03</span><span class="number">-11</span> <span class="number">09</span><span class="number">-56</span><span class="number">-29</span>屏幕截图](/home/lzl/Pictures/<span class="number">2022</span><span class="number">-03</span><span class="number">-11</span> <span class="number">09</span><span class="number">-56</span><span class="number">-29</span>屏幕截图.pngint getMax(<span class="type">int</span>* nums,<span class="type">int</span> left,<span class="type">int</span> right)&#123;</span><br><span class="line">    <span class="keyword">if</span> (left&gt;=right)&#123;</span><br><span class="line">        <span class="keyword">return</span> nums[left];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = left+(right-left)/<span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> leftMax = getMax(nums,left,mid<span class="number">-1</span>);</span><br><span class="line">    <span class="type">int</span> rightMax = getMax(nums,mid+<span class="number">1</span>,right);</span><br><span class="line">    <span class="type">int</span> midMax = nums[mid],sum = midMax;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = mid<span class="number">-1</span>; i &gt;=left ; --i) &#123;</span><br><span class="line">        sum += nums[i];</span><br><span class="line">        midMax = midMax&gt;sum?midMax:sum;</span><br><span class="line">    &#125;</span><br><span class="line">    sum = midMax;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = mid+<span class="number">1</span>; i &lt;=right ; ++i) &#123;</span><br><span class="line">        sum += nums[i];</span><br><span class="line">        midMax = midMax&gt;sum?midMax:sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> max = leftMax&gt;rightMax?leftMax:rightMax;</span><br><span class="line">    max = max&gt;midMax?max:midMax;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> maxSubArray(<span class="type">int</span>* nums,<span class="type">int</span> numSize)&#123;</span><br><span class="line">    <span class="keyword">if</span> (numSize==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> getMax(nums,<span class="number">0</span>,numSize<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1517033/picgodemo/img/2022-03-11%2009-56-29%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="评测结果"></p><h2 id="Solution-two-卡达内算法-Kadane’s-Algorithm"><a href="#Solution-two-卡达内算法-Kadane’s-Algorithm" class="headerlink" title="Solution two (卡达内算法 Kadane’s Algorithm)"></a>Solution two (卡达内算法 Kadane’s Algorithm)</h2><p><strong>时间复杂度： O(n)</strong> <br/></p><p><strong>空间复杂度：O(1)</strong></p><p>​        这个算法的基本思想就是从第一个数开始相加，如果前面数的和加上这个数的和比这个数小，则让和等于这个数；否则，让和加上这个数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span>* nums,<span class="type">int</span> numSize)</span>&#123;</span><br><span class="line">    <span class="type">int</span> sum = nums[<span class="number">0</span>],max = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;numSize;i++)&#123;</span><br><span class="line">        sum += nums[i];</span><br><span class="line">        <span class="keyword">if</span>(sum &lt;= nums[i])&#123;</span><br><span class="line">            sum = nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(sum &gt; max)&#123;</span><br><span class="line">            max = sum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1517033/picgodemo/img/2022-03-10%2020-49-26%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png" alt="评测结果"></p><h2 id="Solution-three-动态规划-dynamic-programming"><a href="#Solution-three-动态规划-dynamic-programming" class="headerlink" title="Solution three (动态规划  dynamic programming )"></a>Solution three (动态规划  dynamic programming )</h2><p><strong>时间复杂度： O(n)</strong> <br/><br><strong>空间复杂度： O(1)</strong></p><p>​        这个算法的基本思想就是如果前一个数大于0，则将其加到当前元素上；否则，保持不变。同时比较获取最大值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span>* nums,<span class="type">int</span> numSize)</span>&#123;</span><br><span class="line">    <span class="type">int</span> max = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;numSize;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i<span class="number">-1</span>]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            nums[i]+=nums[i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nums[i]&gt;max)&#123;</span><br><span class="line">            max = nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/1517033/picgodemo/img/2022-03-10 22-34-19屏幕截图.png" alt="评测结果"></p>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Divide and Conquer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个文章</title>
      <link href="/2022/03/09/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%96%87%E7%AB%A0/"/>
      <url>/2022/03/09/%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/08/hello-world/"/>
      <url>/2022/03/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
